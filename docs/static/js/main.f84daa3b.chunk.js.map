{"version":3,"sources":["componets/AddCategories.js","componets/GifGridItem.js","helpers/getGifs.js","componets/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","each","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","eachElement","key","GifExpertApp","defaultCategory","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAIaA,EAAgB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACdC,mBAAS,IADK,mBAC3CC,EAD2C,KAC/BC,EAD+B,KAmBlD,OACE,0BAAMC,SAba,SAACC,GACpBA,EAAEC,iBAKEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,6CACA,2BAAID,GACJ,2BAAOQ,KAAK,OAAOC,MAAOT,EAAYU,SApBhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,YCJdG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEvC,OACE,yBAAKC,UAAU,2CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCTGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,0FAC0EO,UAC7FF,GAFmB,sBAIEG,MAAMR,GAJR,cAIfS,EAJe,gBAKEA,EAASC,OALX,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAU,IAAD,EAC9B,MAAO,CACLhB,GAAIgB,EAAKhB,GACTC,MAAOe,EAAKf,MACZC,IAAG,UAAEc,EAAKC,cAAP,aAAE,EAAaC,iBAAiBhB,QAXlB,kBAedY,GAfc,4CAAH,sDCQPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdrB,mBAAS,CACjCkC,SAAS,EACTP,KAAM,KAHgC,mBACjCQ,EADiC,KAC1BC,EAD0B,KAcxC,OARAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAACV,GAAD,OACrBQ,EAAS,CACPF,SAAS,EACTP,KAAMC,SAGT,CAACP,IACGc,EDV2BI,CAAalB,GAAjCU,EAFyB,EAE/BJ,KAAcO,EAFiB,EAEjBA,QACtB,OACE,oCACE,wBAAIjB,UAAU,qCAAqCI,GACnD,yBAAKJ,UAAU,aACZiB,GAAW,0CACXH,EAAOF,KAAI,SAACW,GAAD,OACV,kBAAC,EAAD,eAAaC,IAAKD,EAAY1B,IAAQ0B,UEQjCE,EAlBM,SAAC,GAA8B,IAAD,IAA3BC,uBAA2B,MAAT,GAAS,IAGb3C,mBAAS2C,GAHI,mBAG1CC,EAH0C,KAG9B7C,EAH8B,KAKjD,OACE,oCACE,4CACA,6BACA,kBAAC,EAAD,CAAeA,cAAeA,IAE7B6C,EAAWf,KAAI,SAACC,GAAD,OACd,kBAAC,EAAD,CAASW,IAAKX,EAAMT,SAAUS,SCdtCe,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.f84daa3b.chunk.js","sourcesContent":["//  @Package\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategories = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log(\"handleSubmit--llamado, \", inputValue); para el test\n\n    //En vez de recibir las categories por props\n    //setCategories([...categories, inputValue]);\n    if (inputValue.trim().length > 2) {\n      setCategories((cate) => [inputValue, ...cate]); //es un set de useState()\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>AddCategories</h2>\n      <p>{inputValue}</p>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategories.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","//  @Package\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const GifGridItem = ({ id, title, url }) => {\n  //console.log(id, title, url);\n  return (\n    <div className=\"card animate__animated animate__fadeIn \">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nGifGridItem.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=DDHuVVy4Vd8FgtogWGafHmiYTZvxdVqM&q=${encodeURI(\n    category\n  )}&limit=10`;\n  const response = await fetch(url);\n  const { data } = await response.json();\n  //console.log(data);\n  const gifs = data.map((each) => {\n    return {\n      id: each.id,\n      title: each.title,\n      url: each.images?.downsized_medium.url,\n    };\n  });\n  //console.log(gifs);\n  return gifs;\n};\n","//  @Package\nimport React from \"react\";\nimport { PropTypes } from \"prop-types\";\n\n//  @Own\nimport { GifGridItem } from \"./GifGridItem\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\nexport const GifGrid = ({ category }) => {\n  //hago destructuring y le cambio el nombre de data a images para usarlo.\n  const { data: images, loading } = useFetchGifs(category);\n  return (\n    <>\n      <h2 className=\"animate__animated animate__fadeIn\">{category}</h2>\n      <div className=\"card-grid\">\n        {loading && <p>cargando...</p>}\n        {images.map((eachElement) => (\n          <GifGridItem key={eachElement.id} {...eachElement}></GifGridItem>\n          /* <GifGridItem key={eachElement.id} img={eachElement}></GifGridItem> */\n        ))}\n      </div>\n    </>\n  );\n};\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n","//  @Package\nimport { useState, useEffect } from \"react\";\n\n//  @Own\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    loading: true,\n    data: [],\n  });\n\n  useEffect(() => {\n    getGifs(category).then((gifs) =>\n      setState({\n        loading: false,\n        data: gifs,\n      })\n    );\n  }, [category]);\n  return state;\n};\n","//  @Package\nimport React, { useState } from \"react\";\n\n//  @Own\nimport { AddCategories } from \"./componets/AddCategories\";\nimport { GifGrid } from \"./componets/GifGrid\";\n\nconst GifExpertApp = ({ defaultCategory = [] }) => {\n  //const [categories, setCategories] = useState([\"goku\"]);\n  //En vez de poner directamente goku en el useState, lo paso por propsDefault\n  const [categories, setCategories] = useState(defaultCategory);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <hr />\n      <AddCategories setCategories={setCategories} />\n\n      {categories.map((each) => (\n        <GifGrid key={each} category={each} />\n      ))}\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}